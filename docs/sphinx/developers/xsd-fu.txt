Code generation with xsd-fu
===========================

:program:`xsd-fu` is a Python application designed to digest OME XML
schema and produce an object oriented Java infrastructure to ease work
with an XML DOM tree.  It is usually run automatically when building
from source (see :ref:`source-building`) and so running it by hand
should not be needed.  :program:`xsd-fu` is primarily used to generate
the OME-XML model objects, enums and enum handlers, plus the
MetadataStore and MetadataRetrieve interfaces and implementations.

Running the code generator
--------------------------

::

  $ cd components/xsd-fu
  $ ./xsd-fu
  Output directory must be specified!
  Usage: ./xsd-fu [-n xsd_namespace] [-p package] -o <output_dir> -l <lang> <path/to/ome.xsd...>
  Generates Java classes from an OME XML Schema definition.
  
  Default package: "ome.xml.model"
  Default namespace: "xsd:"
  
  Examples:
    ./xsd-fu -n 'xs:' -p ome.xml -o ome/xml schemas/ome.xsd

  Report bugs to OME Devel <ome-devel@lists.openmicroscopy.org.uk>

::

  $ cd components/xsd-fu
  $ ./xsd-fu -o ../../
  Missing subcommand!
  Usage: ./xsd-fu <subcommand> ...
  Executes an OME-XML Schema definition parsing and code generation subcommand.

  Available subcommands:
    java_classes
    omexml_metadata
    omero_metadata
    omero_model
    metadata_store
    metadata_retrieve
    metadata_aggregate
    dummy_metadata
    filter_metadata
    enum_types
    enum_handlers
    doc_gen
    tab_gen
    debug

  Report bugs to OME Devel <ome-devel@lists.openmicroscopy.org.uk>

Generating the OME-XML Java classes
-----------------------------------

The following sections outline how to generate parts of the OME-XML Java
toolchain which are composed of:

- OME model objects
- Enumerations for OME model properties
- Enumeration handlers for regular expression matching of enumeration strings
- Metadata store and Metadata retrieve interfaces for all OME model properties
- Various implementations of Metadata store and/or Metadata retrieve interfaces

All of the above can be generated by this Ant command:

::

  $ cd components/ome-xml
  $ ant generate-source

Run::

  $ ant generate-source -v

to see the command-line options used.


Working with Enumerations and Enumeration Handlers
--------------------------------------------------

XsdFu code generates enumeration regular expressions using a flexible
:source:`configuration file <components/xsd-fu/cfg/enum_handler.cfg>`.

Each enumeration has a key-value listing of regular expression to exact enumeration value matches. For example:

::

  [Correction]
  ".*Pl.*Apo.*" = "PlanApo"
  ".*Pl.*Flu.*" = "PlanFluor"
  "^\\s*Vio.*Corr.*" = "VioletCorrected"
  ".*S.*Flu.*" = "SuperFluor"
  ".*Neo.*flu.*" = "Neofluar"
  ".*Flu.*tar.*" = "Fluotar"
  ".*Fluo.*" = "Fluor"
  ".*Flua.*" = "Fluar"
  "^\\s*Apo.*" = "Apo"


Generate OMERO model specification files
----------------------------------------

Run :program:`xsd-fu` with the ``omero_model`` subcommand.

Special Thanks
--------------

A special thanks goes out to `Dave Kuhlman
<http://www.davekuhlman.org/>`_ for his fabulous work on
`generateDS <http://www.davekuhlman.org/generateDS.html>`_ which
:program:`xsd-fu` makes heavy use of internally.
